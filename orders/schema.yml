openapi: 3.0.3
info:
  title: Orders APP
  version: 1.0.0
  description: This is a test description
paths:
  /api/basket/:
    post:
      operationId: api_basket_create
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/confirm/:
    patch:
      operationId: api_confirm_partial_update
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/contact/:
    post:
      operationId: api_contact_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/order/{id}//:
    get:
      operationId: api_order_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: api_order_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/order/{id}//{id}/:
    get:
      operationId: api_order_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_order_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_order_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: api_order_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/order_detail/:
    get:
      operationId: api_order_detail_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
          description: ''
    post:
      operationId: api_order_detail_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
  /api/order_detail/{id}/:
    get:
      operationId: api_order_detail_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ в деталях.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    put:
      operationId: api_order_detail_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ в деталях.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderItem'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    patch:
      operationId: api_order_detail_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ в деталях.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderItem'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
    delete:
      operationId: api_order_detail_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ в деталях.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/orders/:
    get:
      operationId: api_orders_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: api_orders_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/{id}/:
    get:
      operationId: api_orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: api_orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Заказ.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/product_detail/:
    get:
      operationId: api_product_detail_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductsInShop'
          description: ''
    post:
      operationId: api_product_detail_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsInShop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductsInShop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductsInShop'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsInShop'
          description: ''
  /api/product_detail/{id}/:
    get:
      operationId: api_product_detail_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Продукты в магазине.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsInShop'
          description: ''
    put:
      operationId: api_product_detail_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Продукты в магазине.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsInShop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductsInShop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductsInShop'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsInShop'
          description: ''
    patch:
      operationId: api_product_detail_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Продукты в магазине.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductsInShop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductsInShop'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductsInShop'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsInShop'
          description: ''
    delete:
      operationId: api_product_detail_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Продукты в магазине.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/products/:
    get:
      operationId: api_products_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: api_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: api_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Продукт.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Продукт.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Продукт.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Продукт.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/register/:
    post:
      operationId: api_register_create
      tags:
      - api
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/shoplist/:
    post:
      operationId: api_shoplist_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/thanks/:
    get:
      operationId: api_thanks_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /auth/:
    post:
      operationId: auth_create
      tags:
      - auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 100
        shops:
          type: array
          items:
            $ref: '#/components/schemas/Shop'
      required:
      - id
      - name
      - shops
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date-time
          readOnly: true
        state:
          allOf:
          - $ref: '#/components/schemas/StateEnum'
          title: Статус
        user:
          type: integer
          title: Пользователь
      required:
      - date
      - id
      - state
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Количество
        order:
          $ref: '#/components/schemas/Order'
        product:
          type: integer
          title: Товар
        shop:
          type: integer
          title: Магазин
      required:
      - id
      - order
      - product
      - quantity
      - shop
    PatchedOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date-time
          readOnly: true
        state:
          allOf:
          - $ref: '#/components/schemas/StateEnum'
          title: Статус
        user:
          type: integer
          title: Пользователь
    PatchedOrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Количество
        order:
          $ref: '#/components/schemas/Order'
        product:
          type: integer
          title: Товар
        shop:
          type: integer
          title: Магазин
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 100
        model:
          type: string
          title: Модель
          maxLength: 100
        category:
          $ref: '#/components/schemas/Category'
    PatchedProductsInShop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Количество
        price:
          type: number
          format: double
          title: Цена
        price_rcc:
          type: number
          format: double
          title: Рекомендуемая цена
        product:
          $ref: '#/components/schemas/Product'
        shop:
          $ref: '#/components/schemas/Shop'
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 100
        model:
          type: string
          title: Модель
          maxLength: 100
        category:
          $ref: '#/components/schemas/Category'
      required:
      - category
      - id
      - model
      - name
    ProductsInShop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Количество
        price:
          type: number
          format: double
          title: Цена
        price_rcc:
          type: number
          format: double
          title: Рекомендуемая цена
        product:
          $ref: '#/components/schemas/Product'
        shop:
          $ref: '#/components/schemas/Shop'
      required:
      - id
      - price
      - price_rcc
      - product
      - quantity
      - shop
    Shop:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название
          maxLength: 50
        url:
          type: string
          format: uri
          nullable: true
          title: Ссылка
          maxLength: 200
        filename:
          type: string
          nullable: true
          title: Имя файла
          maxLength: 50
      required:
      - id
      - name
    StateEnum:
      enum:
      - basket
      - confirmed
      type: string
      description: |-
        * `basket` - Статус корзины
        * `confirmed` - Подтвержден
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
